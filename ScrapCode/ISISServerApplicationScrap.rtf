{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red63\green95\blue191;\red127\green127\blue159;\red63\green127\blue95;
\red127\green159\blue191;\red127\green0\blue85;\red191\green95\blue63;\red63\green127\blue127;\red127\green0\blue127;
\red42\green0\blue255;\red0\green128\blue128;\red128\green128\blue128;}
\margl1440\margr1440\vieww15900\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 /**\cf0 \
\cf2 	 * List of WebSockets registered for the application\cf0 \
\cf2 	 * \cf3 <\cf2 NO NEED SINCE THE SUPER CLASS ALREADY TAKES CARE OF CONNECTIONS AND AN ISISWebSocket\cf0 \
\cf2 	 * CAN BE ADDED  TO THE APPLICATION SINCE IT IMPLEMENTS THE WEBSOCKET INTERFACE\cf0 \
\cf2 	 */\cf0 \
	\cf4 //List<ISISWebSocket> sockets = new ArrayList<ISISWebSocket>();
\f1\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural
\cf0 \
\pard\pardeftab720

\f0\fs22 \cf2 /**\cf0 \
\cf2 	 * Create a new WebSocket\cf0 \
\cf2 	 * \cf5 @param\cf2  listeners\cf0 \
\cf2 	 * \cf5 @return\cf0 \
\cf2 	 */\cf0 \
	\cf4 /*WebSocket createSocket(WebSocketListener... listeners) \{\cf0 \
\cf4 		// Create new WebSocket object\cf0 \
\cf4 		final ISISWebSocket socket = new ISISWebSocket(this);\cf0 \
\cf4 		// Add new WebSocket object to list of sockets\cf0 \
\cf4 		sockets.add(socket);\cf0 \
\cf4 		return socket;\cf0 \
\cf4 	\}*/\cf0 \
	\
	\cf4 /*public void onMessage(WebSocket socket, DataFrame frame) \{\cf0 \
\cf4 		final String data = frame.getTextPayload();\cf0 \
\cf4 	\}*/\cf0 \
	\
	\
	\
\
	\cf4 /*\cf0 \
\cf4 	 \cf0 \
\cf4 	 * Event that occurs when a message is sent to the server\cf0 \
\
\cf4 	public void onMessage(WebSocket socket, String text) \{\cf0 \
\cf4 		// Check what kind of message it is\cf0 \
\cf4 		switch(ISISServerRequestData.convertToISISRequest(text)) \{\cf0 \
\cf4 		case HANDLE_USB_DATA:\cf0 \
\cf4 			// \cf5 TODO\cf4 : Call appropriate function\cf0 \
\cf4 			System.out.println("\\"Handle USB data request\\" received");\cf0 \
\cf4 			break;\cf0 \
\cf4 		case HANDLE_SIGNALS_BUFFER:\cf0 \
\cf4 			// \cf5 TODO\cf4 : Call appropriate function\cf0 \
\cf4 			System.out.println("\\"Handle signals buffer request\\" received");\cf0 \
\cf4 			break;\cf0 \
\cf4 		case HANDLE_DIAGNOSTICS:\cf0 \
\cf4 			// \cf5 TODO\cf4 : Call appropriate function\cf0 \
\cf4 			System.out.println("\\"Handle diagnostics request\\" received");\cf0 \
\cf4 			break;\cf0 \
\cf4 		default:\cf0 \
\cf4 			System.out.println("Invalid ISIS server request received");\cf0 \
\cf4 			break;\cf0 \
\cf4 		\}\cf0 \
\
\cf4 		final String data = frame.getTextPayload();\cf0 \
\cf4 		if (data.startsWith("login:")) \{\cf0 \
\cf4 			login((ChatWebSocket) socket, frame);\cf0 \
\cf4 		\} else \{\cf0 \
\cf4 			broadcast(data);\cf0 \
\cf4 		\}\cf0 \
\cf4 	\}\cf0 \
\
\cf4 	public void onConnect(WebSocket socket) \{\cf0 \
\cf4 	\}\cf0 \
\
\cf4 	private void broadcast(String text) \{\cf0 \
\cf4 		//\cf5 TODO\cf4 : ??? WebSocketsServlet.logger.info("Broadcasting : " + text);\cf0 \
\cf4 		System.out.println("Broadcasting : " + text);\cf0 \
\cf4 		for (WebSocket webSocket : sockets) \{\cf0 \
\cf4 			send(webSocket, text);\cf0 \
\cf4 		\}\cf0 \
\cf4 	\}\cf0 \
\
\cf4 	private void send(WebSocket socket, String text) \{\cf0 \
\cf4 		try \{\cf0 \
\cf4 			socket.send(text);\cf0 \
\cf4 		\} catch (Exception e) \{\cf0 \
\cf4 			//\cf5 TODO\cf4 : ??? WebSocketsServlet.logger.log(Level.SEVERE, "Removing chat client: " + e.getMessage(), e);\cf0 \
\cf4 			System.out.println("Removing chat client: " + e.getMessage());\cf0 \
\cf4 			onClose(socket);\cf0 \
\cf4 		\}\cf0 \
\cf4 	\}\cf0 \
\
\cf4 	public void onClose(WebSocket socket) \{\cf0 \
\cf4 		sockets.remove(socket);\cf0 \
\cf4 	\}\cf0 \
\
\cf4 	private void login(ChatWebSocket socket, DataFrame frame) \{\cf0 \
\cf4 		if (socket.getUser() == null) \{\cf0 \
\cf4 			WebSocketsServlet.logger.info("ChatApplication.login");\cf0 \
\cf4 			socket.setUser(frame.getTextPayload().split(":")[1].trim());\cf0 \
\cf4 			broadcast(socket.getUser() + " has joined the chat.");\cf0 \
\cf4 		\}\cf0 \
\cf4 	\}*/\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
/*function WebSocketTest() \{\cf0 \
\cf4 		if ("WebSocket" in window) \{\cf0 \
\cf4 			alert("WebSocket is supported by your Browser!");\cf0 \
\cf4 			// Let us open a web socket\cf0 \
\cf4 			var ws = new WebSocket(\cf0 \
\cf4 					"ws://localhost:8080/ServerProcessISIS/ISISServlet");\cf0 \
\cf4 			ws.onopen = function() \{\cf0 \
\cf4 				// Web Socket is connected, send data using send()\cf0 \
\cf4 				ws.send("Message to send");\cf0 \
\cf4 				alert("Message is sent...");\cf0 \
\cf4 			\};\cf0 \
\cf4 			ws.onmessage = function(evt) \{\cf0 \
\cf4 				var received_msg = evt.data;\cf0 \
\cf4 				alert("Message is received...");\cf0 \
\cf4 			\};\cf0 \
\cf4 			ws.onclose = function() \{\cf0 \
\cf4 				// websocket is closed.\cf0 \
\cf4 				alert("Connection is closed...");\cf0 \
\cf4 			\};\cf0 \
\cf4 		\} else \{\cf0 \
\cf4 			// The browser doesn't support WebSocket\cf0 \
\cf4 			alert("WebSocket NOT supported by your Browser!");\cf0 \
\cf4 		\}\cf0 \
\cf4 	\}*/\
\
\
\
\
\
\
\
\
\
\
\
\
// FROM INDEX_HTML\
\
\
// Register ready listener: When the document is ready, open a WebSocket connectio\cf0 n\
	$(document)\
			.ready(\
					\cf6 function\cf0 () \{\
						\cf4 /*if(webSocketSupported() === false) \{\cf0 \
\cf4 							var $textarea = $('#messages');\cf0 \
\cf4 							$textarea.val("Sorry, WebSocket is not supported in your browser");\cf0 \
\cf4 						\}\cf0 \
\cf4 						else\{\cf0 \
\cf4 							// Create new WebSocket connection to the ISIS server\cf0 \
\cf4 							// Use 8081 to allow TCP/IP monitoring (normal => 8080)\cf0 \
\cf4 							ws = new WebSocket(\cf0 \
\cf4 									"ws://localhost:8081/ServerProcessISIS/ISISServlet");\cf0 \
\cf4 							// Response to event that occurs when WebSocket connection is opened\cf0 \
\cf4 							ws.onopen = function(event) \{\cf0 \
\cf4 								var $textarea = $('#messages');\cf0 \
\cf4 								$textarea.val("Opened client-server connection: " + event.data + "\\n");\cf0 \
\cf4 							\}\cf0 \
\cf4 							// Response to event that occurs when the server sends the client a message\cf0 \
\cf4 							ws.onmessage = function(event) \{\cf0 \
\cf4 								var $textarea = $('#messages');\cf0 \
\cf4 								// "Message received from server: "\cf0 \
\cf4 								$textarea.val($textarea.val() + event.data + "\\n");\cf0 \
\cf4 								$textarea.animate(\{\cf0 \
\cf4 									scrollTop : $textarea.height()\cf0 \
\cf4 								\}, 1000);\cf0 \
\cf4 							\}\cf0 \
\cf4 							// Response to event that occurs when WebSocket connection is closed\cf0 \
\cf4 							ws.onclose = function(event) \{\cf0 \
\cf4 								var $textarea = $('#messages');\cf0 \
\cf4 								$textarea.val("Closed client-server connection: " + event.data + "\\n");\cf0 \
\cf4 								//event.code event.reason event.wasClean\cf0 \
\cf4 							\}\cf0 \
\cf4 							// Response to event that occurs when WebSocket connection error occurs\cf0 \
\cf4 							ws.onerror = function(event) \{\cf0 \
\cf4 								var $textarea = $('#messages');\cf0 \
\cf4 								$textarea.val("Error with WebSocket connection: " + event.data + "\\n");\cf0 \
\cf4 								// Close the connection with the server\cf0 \
\cf4 								ws.close();\cf0 \
\cf4 								$textarea.val($textarea.val() + "Closed client-server connection: " + \cf0 \
\cf4 										event.data + "\\n");\cf0 \
\cf4 							\}\cf0 \
\cf4 						\}*/\cf0 \
					\});\
\
\
\
\
\
\
\
\
\cf4 // FROM INDEX_JSP (Thursday Jan. 17 2013 @ 8:40PM)\
\cf0 \
\
\pard\pardeftab720
\cf7 <%@\cf8 page\cf0  \cf9 contentType\cf0 =\cf10 "text/html"\cf0  \cf9 pageEncoding\cf0 =\cf10 "UTF-8"\cf7 %>\cf0 \
\cf7 <%@\cf0  \cf8 page\cf0  \cf9 import\cf0 =\cf10 "java.util.*, java.util.logging.Level, ServletPrograms.ISISServlet"\cf7 %>\cf0 \
\pard\pardeftab720
\cf11 <!\cf8 DOCTYPE\cf0  \cf11 HTML\cf0  \cf12 PUBLIC\cf0  \cf11 "-//W3C//DTD HTML 4.01 Transitional//EN"\cf0 \
    	               \cf4 "http://www.w3.org/TR/html4/loose.dtd"\cf11 >\cf0 \
\
\cf11 <\cf8 html\cf11 >\cf0 \
\cf11 <\cf8 head\cf11 >\cf0 \
\cf11 <\cf8 meta\cf0  \cf9 http-equiv\cf0 =\cf10 "Content-Type"\cf0  \cf9 content\cf0 =\cf10 "text/html; charset=UTF-8"\cf11 >\cf0 \
\cf11 <\cf8 title\cf11 >\cf0 GlassFish JSP Page\cf11 </\cf8 title\cf11 >\cf0 \
\pard\pardeftab720
\cf7 <%\cf0  \
	HttpServlet myServlet;\
\cf7 %>\cf0 \
\pard\pardeftab720
\cf11 </\cf8 head\cf11 >\cf0 \
\cf11 <\cf8 body\cf11 >\cf0 \
	\cf11 <\cf8 h1\cf11 >\cf0 Hello ISIS World!\cf11 </\cf8 h1\cf11 >\cf0 \
	\cf2 <!-- The time is now <.%= new java.util.Date() %.> -->\cf0 \
	\cf11 <\cf8 br\cf0  \cf11 />\cf0 \
	\cf11 <\cf8 br\cf0  \cf11 />\cf0 \
	\cf11 <\cf8 button\cf0 \
		\cf9 onclick\cf0 =\cf10 '\cf7 <%\cf4 // This scriptlet simply logs a message when this button is clicked\cf0 \
						java.util.logging.Logger.getAnonymousLogger().log(\
								Level.INFO, \cf10 "Button was clicked at time: "\cf0  + \cf6 new\cf0  java.util.Date());\
    					\cf4 // SCRAP\cf0 \
    					\cf4 //System.out.println("Button was clicked at time: " + new java.util.Date());\cf0 \
    					\cf4 // <jsp:include page="hello.jsp"/>\cf0 \
    					\cf4 //ServerMain.ServerProcessMain.main(null);\cf0 \
    					\cf4 //<%@ page import="WebSocketClasses.*"\cf0 \
    				\cf7 %>\cf10 '\cf11 >\cf0 Click\
		Me!\cf11 </\cf8 button\cf11 >\cf0 \
	\cf11 <\cf8 br\cf0  \cf11 />\cf0 \
	\cf11 <\cf8 br\cf0  \cf11 />\cf0 \
	\cf11 <\cf8 button\cf0 \
		\cf9 onclick\cf0 =\cf10 '\cf7 <%\cf4 // This scriptlet connects the client to the server by opening a new websocket\cf0 \
						myServlet = \cf6 new\cf0  ISISServlet();\
						myServlet.init();\
						\cf7 %>\cf10 '\cf11 >\cf0 Connect\cf11 </\cf8 button\cf11 >\cf0 \
	\cf11 <\cf8 br\cf0  \cf11 />\cf0 \
	\cf11 <\cf8 button\cf0 \
		\cf9 onclick\cf0 =\cf10 '\cf7 <%\cf4 // This scriptlet sends a message to the server\cf0 \
						\cf4 //\cf0 \
						\cf7 %>\cf10 '\cf11 >\cf0 Send\cf11 </\cf8 button\cf11 >\cf0 \
	\cf11 <\cf8 br\cf0  \cf11 />\cf0 \
	\cf11 <\cf8 button\cf0 \
		\cf9 onclick\cf0 =\cf10 '\cf7 <%\cf4 // This scriptlet disconnects the client from the server by terminating the websocket\cf0 \
					\cf4 // connection\cf0 \
						\cf4 //myServlet.\cf0 \
						\cf7 %>\cf10 '\cf11 >\cf0 Disconnect\cf11 </\cf8 button\cf11 >\cf0 \
\cf11 </\cf8 body\cf11 >\cf0 \
\cf11 </\cf8 html\cf11 >\cf0 \
 }